# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

V2Pv21_xsd:
  document_type: CLS_F_XSD_EDOC
  language: sk
  form: V2Pv21
  data: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!-- Vyhlasenie o poukazani podielu zaplatenej dane z prijmov fyzickej osoby podla par. 50, ktorej bolo vykonane rocne zuctovanie preddavkov na dan - 2021-->
    <!-- Potvrdenie o zaplateni dane z prijmov zo zavislej cinnosti na ucely vyhlasenia o poukazani 2 alebo 3 percent zaplatenej dane FO-->
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:annotation>
    <xs:documentation>V2Pv21 vyhlasenie a potvrdenie</xs:documentation>
    </xs:annotation>
    <!--  prazdny retazec  -->
    <xs:simpleType name="emptyStrType">
    <xs:restriction base="xs:string">
    <xs:enumeration value=""/>
    </xs:restriction>
    </xs:simpleType>
    <!--  povinny datum v tvare: (d)d.(m)m.rrrr  -->
    <xs:simpleType name="oneFieldDateType">
    <xs:restriction base="xs:string">
    <xs:pattern value="\d?\d\.\d?\d\.\d\d\d\d"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinny datum v tvare: (d)d.(m)m.rrrr  -->
    <xs:simpleType name="optOneFieldDateType">
    <xs:union memberTypes="oneFieldDateType emptyStrType"/>
    </xs:simpleType>
    <!--  povinny den/mesiac v tvare: (d)d/(m)m  -->
    <xs:simpleType name="dayMonthType">
    <xs:restriction base="xs:decimal">
    <xs:pattern value="\d?\d"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinny den/mesiac v tvare: (d)d/(m)m  -->
    <xs:simpleType name="optDayMonthType">
    <xs:union memberTypes="dayMonthType emptyStrType"/>
    </xs:simpleType>
    <!--  povinny rok  -->
    <xs:simpleType name="yearType">
    <xs:restriction base="xs:decimal">
    <xs:pattern value="\d\d\d\d"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinny rok  -->
    <xs:simpleType name="optYearType">
    <xs:union memberTypes="yearType emptyStrType"/>
    </xs:simpleType>
    <!--  nepovinne realne cislo  -->
    <xs:simpleType name="optDouble">
    <xs:union memberTypes="xs:double emptyStrType"/>
    </xs:simpleType>
    <!-- nepovinny checkbox -->
    <xs:simpleType name="only_0_1">
    <xs:restriction base="xs:decimal">
    <xs:totalDigits value="1"/>
    <xs:pattern value="[0-1]"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  retazec na max. 6 znakov  -->
    <xs:simpleType name="string6">
    <xs:restriction base="xs:string">
    <xs:maxLength value="6"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  retazec na max. 4 znaky  -->
    <xs:simpleType name="string4">
    <xs:restriction base="xs:string">
    <xs:maxLength value="4"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  korenovy element  -->
    <xs:element name="dokument">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="hlavicka" type="hlavicka"/>
    <xs:element name="potvrdenie" type="potvrdenieType" minOccurs="0"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <!--  hlavicka  -->
    <xs:complexType name="hlavicka">
    <xs:sequence>
    <xs:element name="rodneCislo" type="rodneCisloType"/>
    <xs:element name="datumNarodenia" type="optOneFieldDateType"/>
    <xs:element name="zaRok" type="yearType"/>
    <xs:element name="danovnik" type="danovnikType"/>
    <xs:element name="prijimatel" type="prijimatelType"/>
    <xs:element name="suhlas" type="only_0_1"/>
    <xs:element name="datumVyhlasenia" type="optOneFieldDateType"/>
    <xs:element name="podpis" type="only_0_1"/>
    </xs:sequence>
    </xs:complexType>
    <!--  danovnik  -->
    <xs:complexType name="danovnikType">
    <xs:sequence>
    <xs:element name="priezvisko" type="xs:string"/>
    <xs:element name="meno" type="xs:string"/>
    <xs:element name="titulPred" type="xs:string"/>
    <xs:element name="titulZa" type="xs:string"/>
    <xs:element name="adresa" type="adresaType"/>
    <xs:element name="telefon" type="xs:string"/>
    <xs:element name="zaplatenaDan" type="optDec"/>
    <xs:element name="sumaZDane" type="optDec"/>
    <xs:element name="datumZaplatenia" type="optOneFieldDateType"/>
    <xs:element name="splnam3perc" type="only_0_1"/>
    </xs:sequence>
    </xs:complexType>
    <!--  prijimatel -->
    <xs:complexType name="prijimatelType">
    <xs:sequence>
    <xs:element name="ico" type="optIcoStrType12"/>
    <xs:element name="obchodneMeno" type="obchodneMenoType"/>
    </xs:sequence>
    </xs:complexType>
    <!--  sidlo  -->
    <xs:complexType name="adresaType">
    <xs:sequence>
    <xs:element name="ulica" type="xs:string"/>
    <xs:element name="supisneOrientacneCislo" type="xs:string"/>
    <xs:element name="psc" type="xs:string"/>
    <xs:element name="obec" type="xs:string"/>
    <xs:element name="stat" type="xs:string"/>
    </xs:sequence>
    </xs:complexType>
    <!--  povinne dic  -->
    <xs:simpleType name="dicType">
    <xs:restriction base="xs:decimal">
    <xs:pattern value="\d{10}"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinne dic  -->
    <xs:simpleType name="optDicType">
    <xs:union memberTypes="dicType emptyStrType"/>
    </xs:simpleType>
    <!--  povinne ico  -->
    <xs:simpleType name="icoType">
    <xs:restriction base="xs:string">
    <xs:pattern value="\d{8}"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinne ico  -->
    <xs:simpleType name="optIcoType">
    <xs:union memberTypes="icoType emptyStrType"/>
    </xs:simpleType>
    <!--  nepovinne ico  max. na 12 -->
    <xs:simpleType name="optIcoStrType12">
    <xs:restriction base="xs:string">
    <xs:maxLength value="12"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  nepovinne decimal cislo  na 2 desat.miesta -->
    <xs:simpleType name="optDec">
    <xs:union memberTypes="suma13 emptyStrType"/>
    </xs:simpleType>
    <!-- suma 13.2 -->
    <xs:simpleType name="suma13">
    <xs:restriction base="xs:decimal">
    <xs:totalDigits value="13"/>
    <xs:fractionDigits value="2"/>
    </xs:restriction>
    </xs:simpleType>
    <!--  obchodne meno  -->
    <xs:complexType name="obchodneMenoType">
    <xs:sequence>
    <xs:element name="riadok" type="xs:string" maxOccurs="2"/>
    </xs:sequence>
    </xs:complexType>
    <!--  obchodne meno  1 r. -->
    <xs:complexType name="obchodneMenoType1">
    <xs:sequence>
    <xs:element name="riadok" type="xs:string"/>
    </xs:sequence>
    </xs:complexType>
    <!--  sidlo  -->
    <xs:complexType name="sidloType">
    <xs:sequence>
    <xs:element name="ulica" type="xs:string"/>
    <xs:element name="supisneOrientacneCislo" type="xs:string"/>
    <xs:element name="psc" type="xs:string"/>
    <xs:element name="obec" type="xs:string"/>
    </xs:sequence>
    </xs:complexType>
    <!--  rodne cislo na 2 casti  -->
    <xs:complexType name="rodneCisloType">
    <xs:sequence>
    <xs:element name="rcPredLom" type="string6"/>
    <xs:element name="rcZaLom" type="string4"/>
    </xs:sequence>
    </xs:complexType>
    <!--  potvrdenie  -->
    <xs:complexType name="potvrdenieType">
    <xs:sequence>
    <xs:element name="rodneCislo" type="rodneCisloType"/>
    <xs:element name="datumNarodenia" type="optOneFieldDateType"/>
    <xs:element name="zaRok" type="yearType"/>
    <xs:element name="zamestnanec" type="zamestnanecType"/>
    <xs:element name="zamestnavatel" type="zamestnavatelType"/>
    <xs:element name="udajeOZaplateni" type="udajeOZaplateniType"/>
    <xs:element name="vypracoval" type="vypracovalType"/>
    </xs:sequence>
    </xs:complexType>
    <!--  zamestnanec-->
    <xs:complexType name="zamestnanecType">
    <xs:sequence>
    <xs:element name="priezvisko" type="xs:string"/>
    <xs:element name="meno" type="xs:string"/>
    <xs:element name="titulPred" type="xs:string"/>
    <xs:element name="titulZa" type="xs:string"/>
    <xs:element name="adresa" type="adresaType"/>
    </xs:sequence>
    </xs:complexType>
    <!--  zamestnavatel-->
    <xs:complexType name="zamestnavatelType">
    <xs:sequence>
    <xs:element name="dic" type="optDicType"/>
    <xs:element name="fyzickaOsoba" type="fyzickaOsobaType"/>
    <xs:element name="obchodneMeno" type="obchodneMenoType1"/>
    <xs:element name="trvalyPobyt" type="adresaType"/>
    </xs:sequence>
    </xs:complexType>
    <!--  udajeOZaplateni -->
    <xs:complexType name="udajeOZaplateniType">
    <xs:sequence>
    <xs:element name="danPar15" type="optDec"/>
    <xs:element name="danBonus" type="optDec"/>
    <xs:element name="danBonusUroky" type="optDec"/>
    <xs:element name="danZnizena" type="optDec"/>
    <xs:element name="danNaUhradu" type="optDec"/>
    <xs:element name="danZaplatena" type="optDec"/>
    <xs:element name="datumZaplatenia" type="optOneFieldDateType"/>
    </xs:sequence>
    </xs:complexType>
    <!--  fyzicka osoba  -->
    <xs:complexType name="fyzickaOsobaType">
    <xs:sequence>
    <xs:element name="priezvisko" type="xs:string"/>
    <xs:element name="meno" type="xs:string"/>
    <xs:element name="titulPred" type="xs:string"/>
    <xs:element name="titulZa" type="xs:string"/>
    </xs:sequence>
    </xs:complexType>
    <!--  vypracoval  -->
    <xs:complexType name="vypracovalType">
    <xs:sequence>
    <xs:element name="vypr" type="xs:string"/>
    <xs:element name="dna" type="optOneFieldDateType"/>
    <xs:element name="podpis" type="only_0_1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:schema>

V2Pv21_txt_xslt:
  document_type: CLS_F_XSLT_TXT_SGN
  language: sk
  form: V2Pv21
  data: |
    <?xml version="1.0" encoding="UTF-8"?>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="text" indent="yes" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    <xsl:template match="dokument">
    <xsl:text>V2Pv21</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>VYHLÁSENIE</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/rodneCislo">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[01] - Rodné číslo</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/rodneCislo/rcPredLom">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Pred lomítkom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/rodneCislo/rcZaLom">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Za lomítkom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/datumNarodenia">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[02] - Dátum narodenia:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/zaRok">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Rok:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>I. ODDIEL - ÚDAJE O DAŇOVNÍKOVI</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/priezvisko">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[03] - Priezvisko:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/meno">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[04] - Meno:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/titulPred">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[05] - Titul pred menom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/titulZa">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[05] - Titul za priezviskom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Adresa trvalého pobytu</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa/ulica">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[06] - Ulica:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa/supisneOrientacneCislo">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[07] - Súpisné/orientačné číslo:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa/psc">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[08] - PSČ:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa/obec">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[09] - Obec:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/adresa/stat">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[10] - Štát:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/telefon">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[11] - Telefónne číslo:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/zaplatenaDan">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[12] - Zaplatená daň, z ktorej sa vypočíta suma do výšky 2 % resp. 3 % 1) zaplatenej dane:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/sumaZDane">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[13] - Suma do výšky 2 % resp. 3 % 1) zo zaplatenej dane z r. 12 (min. 3 eurá):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/datumZaplatenia">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[14] - Dátum zaplatenia dane:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/danovnik/splnam3perc">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>spĺňam podmienky na poukázanie 3% z dane:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/prijimatel">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>II. ODDIEL - ÚDAJE O PRIJÍMATEĽOVI</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/prijimatel/ico">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[15] - IČO:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/prijimatel/obchodneMeno">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[16] - Obchodné meno (názov)</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/prijimatel/obchodneMeno/riadok">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>riadok:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/suhlas">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>súhlasím so zaslaním údajov (meno, priezvisko a trvalý pobyt) mnou určenému príjmateľovi podielu
    zaplatenej dane uvedenému v II. oddiele podľa § 50 ods. 8 zákona:
    </xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/datumVyhlasenia">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Dátum:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/hlavicka/podpis">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Vyhlasujem, že uvedené údaje v tomto vyhlásení sú pravdivé:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>POTVRDENIE</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/rodneCislo">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[01] - Rodné číslo</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/rodneCislo/rcPredLom">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Pred lomítkom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/rodneCislo/rcZaLom">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Za lomítkom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/datumNarodenia">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[02] - Dátum narodenia:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zaRok">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Rok:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>I. ÚDAJE O ZAMESTNANCOVI</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/priezvisko">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[03] - Priezvisko:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/meno">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[04] - Meno:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/titulPred">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[05] - Titul pred menom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/titulZa">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[05] - Titul za priezviskom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Adresa trvalého pobytu</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa/ulica">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[06] - Ulica:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa/supisneOrientacneCislo">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[07] - Súpisné/orientačné číslo:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa/psc">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[08] - PSČ:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa/obec">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[09] - Obec:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnanec/adresa/stat">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[10] - Štát:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>II. ÚDAJE O ZAMESTNÁVATEĽOVI</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/dic">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[11] - Daňové identifikačné číslo:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/fyzickaOsoba">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Fyzická osoba</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/fyzickaOsoba/priezvisko">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[12] - Priezvisko:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/fyzickaOsoba/meno">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[13] - Meno:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/fyzickaOsoba/titulPred">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[14] - Titul pred menom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/fyzickaOsoba/titulZa">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[14] - Titul za priezviskom:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/obchodneMeno">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[15] - Obchodné meno alebo názov</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/obchodneMeno/riadok">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>riadok:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Trvalý pobyt (fyzická osoba) alebo sídlo (právnická osoba)</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt/ulica">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[16] - Ulica:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt/supisneOrientacneCislo">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[17] - Súpisné/orientačné číslo:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt/psc">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[18] - PSČ:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt/obec">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[19] - Obec:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/zamestnavatel/trvalyPobyt/stat">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[20] - Štát:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>III. ÚDAJE O ZAPLATENÍ DANE Z PRÍJMOV ZO ZÁVISLEJ ČINNOSTI - v eurách</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danPar15">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[21] - Daň – podľa § 15 zákona (z r. 06 ročného zúčtovania preddavkov na daň):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danBonus">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[22] - Nárok na daňový bonus podľa § 33 zákona (z r. 09 ročného zúčtovania preddavkov na daň):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danBonusUroky">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[23] - Nárok na daňový bonus na zaplatené úroky podľa § 33a zákona (z r. 15 ročného zúčtovania preddavkov na daň):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danZnizena">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[24] - Daň znížená o daňový bonus (§ 33 zákona) a daňový bonus na zaplatené úroky (§ 33a zákona) (r. 21 - r. 22 - r. 23 ) &gt; 0:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danNaUhradu">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[25] - Daň na úhradu (z r. 21 ročného zúčtovania preddavkov na daň):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/danZaplatena">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>[26] - Daň na úhradu (z r. 25 tohto potvrdenia), zrazená zamestnancovi alebo zaplatená zamestnancom v lehote do podania vyhlásenia o poukázaní podielu zaplatenej dane z príjmov fyzickej osoby v úhrnnej sume:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/udajeOZaplateni/datumZaplatenia">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Dňa:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/vypracoval">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Vypracoval</xsl:text>
    <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/vypracoval/vypr">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Potvrdenie vypracoval(a):</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/vypracoval/dna">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Dátum:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>
    <xsl:template match="dokument/potvrdenie/vypracoval/podpis">
    <xsl:if test="./text()">
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>&#09;</xsl:text>
    <xsl:text>Potvrdzujeme týmto, že údaje uvedené v potvrdení sú pravdivé:</xsl:text>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="."/>
    <xsl:with-param name="replace" select="'&#10;'"/>
    <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
    </xsl:call-template>
    </xsl:if>
    </xsl:template>

    <xsl:template name="formatAnyUri">
    <xsl:param name="anyUri"/>
    <xsl:variable name="anyUriString" select="string($anyUri)"/>
    <xsl:variable name="anyUriSubString">
    <xsl:choose>
    <xsl:when test="$anyUriString != '' and contains($anyUriString, 'mailto:') and contains($anyUriString, '@')">
    <xsl:value-of select="substring($anyUriString, 8, string-length($anyUriString))"/>
    </xsl:when>
    <xsl:when test="$anyUriString != '' and contains($anyUriString, 'http://')">
    <xsl:value-of select="substring($anyUriString, 8, string-length($anyUriString))"/>
    </xsl:when>
    <xsl:when test="$anyUriString != '' and contains($anyUriString, 'https://')">
    <xsl:value-of select="substring($anyUriString, 9, string-length($anyUriString))"/>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$anyUriString"></xsl:value-of>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:variable>
    <xsl:value-of select="$anyUriSubString"/>
    </xsl:template>
    <xsl:template name="booleanCheckboxToString">
    <xsl:param name="boolValue"/>
    <xsl:variable name="boolValueString" select="string($boolValue)"/>
    <xsl:choose>
    <xsl:when test="$boolValueString = 'true' ">
    <xsl:text>Áno</xsl:text>
    </xsl:when>
    <xsl:when test="$boolValueString = '1' ">
    <xsl:text>Áno</xsl:text>
    </xsl:when>
    <xsl:when test="$boolValueString = 'false' ">
    <xsl:text>Nie</xsl:text>
    </xsl:when>
    <xsl:when test="$boolValueString = '0' ">
    <xsl:text>Nie</xsl:text>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$boolValueString"></xsl:value-of>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:template>
    <xsl:template name="string-replace-all">
    <xsl:param name="text"/>
    <xsl:param name="replace"/>
    <xsl:param name="by"/>
    <xsl:choose>
    <xsl:when test="contains($text, $replace)">
    <xsl:value-of select="substring-before($text,$replace)"/>
    <xsl:value-of select="$by"/>
    <xsl:call-template name="string-replace-all">
    <xsl:with-param name="text" select="substring-after($text,$replace)"/>
    <xsl:with-param name="replace" select="$replace"/>
    <xsl:with-param name="by" select="$by"/>
    </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$text"/>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:template>
    <xsl:template name="formatToSkDate">
    <xsl:param name="date"/>
    <xsl:variable name="dateString" select="string($date)"/>
    <xsl:choose>
    <xsl:when
    test="$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' ">
    <xsl:value-of
    select="concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))"/>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$dateString"></xsl:value-of>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:template>
    <xsl:template name="formatTimeTrimMinutes">
    <xsl:param name="time"/>
    <xsl:variable name="timeString" select="string($time)"/>
    <xsl:if test="$timeString != ''">
    <xsl:value-of select="substring($timeString, 1, 5)"/>
    </xsl:if>
    </xsl:template>
    <xsl:template name="formatToSkDateTime">
    <xsl:param name="dateTime"/>
    <xsl:variable name="dateSubstring" select="substring($dateTime, 1, 10)"/>
    <xsl:variable name="timeSubstring" select="substring($dateTime, 12, 8)"/>
    <xsl:variable name="dateString">
    <xsl:choose>
    <xsl:when
    test="$dateSubstring != '' and string-length($dateSubstring)=10 and string(number(substring($dateSubstring, 1, 4))) != 'NaN' ">
    <xsl:value-of
    select="concat(substring($dateSubstring, 9, 2), '.', substring($dateSubstring, 6, 2), '.', substring($dateSubstring, 1, 4))"/>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$dateSubstring"></xsl:value-of>
    </xsl:otherwise>
    </xsl:choose>
    </xsl:variable>
    <xsl:variable name="timeString">
    <xsl:if test="$timeSubstring != ''">
    <xsl:value-of select="substring($timeSubstring, 1, 5)"/>
    </xsl:if>
    </xsl:variable>
    <xsl:value-of select="concat($dateString,' ',$timeString)"/>
    </xsl:template>
    </xsl:stylesheet>

VP_DANv24_xsd:
  document_type: CLS_F_XSD_EDOC
  language: sk
  form: VP_DANv24
  data: <?xml version="1.0" encoding="UTF-8"?>
    <!-- Vseobecne podanie pre FS - sprava dani, ver.2024 -->
    <xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!-- Retazec - lubovolny retazec -->
    <xs:simpleType name="ldt_Retazec">
    <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <!-- RadioButton - hodnoty 0 a 1 -->
    <xs:simpleType name="ldt_RadioButton">
    <xs:restriction base="xs:string">
    <xs:pattern value="[01]" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Druh prilohy - hodnoty 0, 1 a 2 -->
    <xs:simpleType name="ldt_DruhPrilohy">
    <xs:restriction base="xs:string">
    <xs:pattern value="[012]" />
    </xs:restriction>
    </xs:simpleType>

    <!-- ICO -->
    <xs:simpleType name="ldt_ICO">
    <xs:restriction base="xs:string">
    <xs:pattern value="\d{8}|\d{12}"></xs:pattern>
    </xs:restriction>
    </xs:simpleType>

    <!-- DIC -->
    <xs:simpleType name="ldt_DIC">
    <xs:restriction base="xs:string">
    <xs:pattern value="|\d{10}" />
    <xs:maxLength value="10" />
    </xs:restriction>
    </xs:simpleType>

    <!-- RodneCislo - s lomitkom, bez lomitka -->
    <xs:simpleType name="ldt_RodneCislo">
    <xs:restriction base="xs:string">
    <xs:pattern value="|\d{6}\/\d{3,4}|\d{9,10}" />
    <xs:maxLength value="11" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Datum -->
    <xs:simpleType name="ldt_Datum">
    <xs:restriction base="xs:date"/>
    </xs:simpleType>

    <!-- PSC -->
    <xs:simpleType name="ldt_PSC">
    <xs:restriction base="xs:string">
    <xs:maxLength value="10" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Telefonne cislo -->
    <xs:simpleType name="ldt_Telefon">
    <xs:restriction base="xs:string">
    <xs:pattern value="|0\d{9}|0\d{10}|0\d{11}|0\d{12}|0\d{13}" />
    <xs:maxLength value="14" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Email -->
    <xs:simpleType name="ldt_Email">
    <xs:restriction base="xs:string">
    <xs:maxLength value="254" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Cislo domu -->
    <xs:simpleType name="ldt_CisloDomu">
    <xs:restriction base="xs:string">
    <xs:maxLength value="8" />
    </xs:restriction>
    </xs:simpleType>

    <!-- TextArea - viacriadkovy dlhy text max. 2000 znakov -->
    <xs:simpleType name="ldt_TextArea">
    <xs:restriction base="xs:string">
    <xs:maxLength value="2000" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Evidencne cislo suvisiaceho dokumentu -->
    <xs:simpleType name="ldt_EvCisloSuvDok">
    <xs:restriction base="xs:string">
    <xs:pattern value="|\d{1,9}" />
    <xs:maxLength value="9" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Rok -->
    <xs:simpleType name="ldt_Rok">
    <xs:restriction base="xs:string">
    <xs:pattern value="|\d{4}" />
    <xs:maxLength value="4" />
    </xs:restriction>
    </xs:simpleType>

    <!-- Checkbox -->
    <xs:simpleType name="LDT_Checkbox">
    <xs:restriction base="xs:boolean">
    </xs:restriction>
    </xs:simpleType>


    <xs:element name="dokument">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="secNazov" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valNazov" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secEvidencneCisloSuvisiacehoDOkumentu" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valEvidencneCisloSuvisiacehoDokumentu" type="ldt_EvCisloSuvDok" minOccurs="0" nillable="true"/>
    <xs:element name="valECSDRok" type="ldt_Rok" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secAdresovanieVP" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valOrganFS" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="secAdresatDU" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valDanovyUrad" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valPracoviskoDU" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secOblastPodania" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valOblastPodania" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valAgenda" type="ldt_Retazec" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secTypPodania" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valTypSluzby1" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valTypPodania" type="ldt_Retazec" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secDanSubjekt" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valFormaDanovehoSubjektu" type="ldt_RadioButton" minOccurs="1">
    <xs:annotation>
    <xs:documentation>Hodnoty 0-Fyzická osoba, 1-Právnicka osoba</xs:documentation>
    </xs:annotation>
    </xs:element>
    <xs:element name="valDicDanSubj" type="ldt_DIC" minOccurs="0" nillable="true"/>
    <xs:element name="secDanSubjFO" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valIcoFO" type="ldt_ICO" minOccurs="0" nillable="true"/>
    <xs:element name="valObchMenoDanSubjFO" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="secDoplUdajeFO" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valTitulPredDanSubjFO" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="valMenoDanSubjFO" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valPriezvDanSubjFO" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valTitulZaDanSubjFO" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="valRodneCisloDanSubjFO" type="ldt_RodneCislo" minOccurs="0" nillable="true"/>
    <xs:element name="valDatumNarodeniaDanSubjFO" type="ldt_Datum" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secDanSubjPO" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valIcoPO" type="ldt_ICO" minOccurs="0" nillable="true"/>
    <xs:element name="valObchMenoDanSubjPO" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="secDoplUdajePO" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valPravnaFormaDanSubjPO" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secSidlo" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valUlica" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="valCislo" type="ldt_CisloDomu" minOccurs="1"/>
    <xs:element name="valPsc" type="ldt_PSC" minOccurs="1"/>
    <xs:element name="valObec" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valStat" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valTelefon" type="ldt_Telefon" minOccurs="0" nillable="true"/>
    <xs:element name="valEmail" type="ldt_Email" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secUdajeSpoplatnenePodanie" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="ID_sluzby" type="ldt_Retazec" minOccurs="0"/>
    <xs:element name="valSadzobnikPoplatkov" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valNazovSluzby" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="secPomocna" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valVystupSluzby" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="valJednokovaCena" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="secPomocna2" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valOslobodenie" type="LDT_Checkbox" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="valDovodOslobodenia" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    <xs:element name="secSchrankaAP" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="schrankaAP" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secSchrankaSubjektu" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="schrankaSubjektu" type="ldt_Retazec" minOccurs="0" nillable="true"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secDruhPrilohy" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valDruhPrilohy" type="ldt_DruhPrilohy" minOccurs="1">
    <xs:annotation>
    <xs:documentation>Hodnoty 0-Súčasťou podania nie je príloha, 1-Podanie je tvorené súborom dokumentov, 2-Súčasťou podania je príloha</xs:documentation>
    </xs:annotation>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secObsah" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valTextPodania" type="ldt_TextArea" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secDokumentyPodania" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="secDokumentPodania" minOccurs="1" maxOccurs="999">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valPopisDokumentu" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valSposobDoruceniaDokumentu" type="ldt_Retazec" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secPrilohyPodania" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="secPrilohaPodania" minOccurs="1" maxOccurs="999">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valPopisPrilohy" type="ldt_Retazec" minOccurs="1"/>
    <xs:element name="valSposobDoruceniaPrilohy" type="ldt_Retazec" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="secDatumPodania" minOccurs="0">
    <xs:complexType>
    <xs:sequence>
    <xs:element name="valDatumPodania" type="ldt_Datum" minOccurs="1"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:schema>

VP_DANv24_txt_xslt:
  document_type: CLS_F_XSLT_TXT_SGN
  language: sk
  form: VP_DANv24
  data: |
    <?xml version="1.0" encoding="UTF-8"?>
    <xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:fo="http://www.w3.org/1999/XSL/Format">
    <xsl:output method="text" omit-xml-declaration="yes" encoding="UTF-8"/>
    <xsl:template match="/">
    Všeobecné podanie - správa daní

    Evidenčné číslo súvisiaceho dokumentu:
      <xsl:value-of select="/dokument/secEvidencneCisloSuvisiacehoDOkumentu/valEvidencneCisloSuvisiacehoDokumentu"/>/
      <xsl:value-of select="/dokument/secEvidencneCisloSuvisiacehoDOkumentu/valECSDRok"/>
      <xsl:for-each select="/dokument/secAdresovanieVP">

      Adresát podania
    Orgán finančnej správy:
      <xsl:choose>
      <xsl:when test="valOrganFS = 'FRSR'">Finančné riaditeľstvo SR</xsl:when>
      <xsl:when test="valOrganFS = 'DU'">Daňový úrad</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valOrganFS"/>
      </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="secAdresatDU">
      <xsl:if test="valDanovyUrad">
    Daňový úrad:
      <xsl:choose>
      <xsl:when test="valDanovyUrad = 600">Banská Bystrica</xsl:when>
      <xsl:when test="valDanovyUrad = 100">Bratislava</xsl:when>
      <xsl:when test="valDanovyUrad = 800">Košice</xsl:when>
      <xsl:when test="valDanovyUrad = 400">Nitra</xsl:when>
      <xsl:when test="valDanovyUrad = 700">Prešov</xsl:when>
      <xsl:when test="valDanovyUrad = 300">Trenčín</xsl:when>
      <xsl:when test="valDanovyUrad = 200">Trnava</xsl:when>
      <xsl:when test="valDanovyUrad = 500">Žilina</xsl:when>
      <xsl:when test="valDanovyUrad = 900">pre vybrané daňové subjekty</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valDanovyUrad"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:if>
      </xsl:for-each>
      </xsl:for-each>
      <xsl:for-each select="/dokument/secOblastPodania">
    Oblasť podania:
      <xsl:choose>
      <xsl:when test="valOblastPodania = 'REG'">Register</xsl:when>
      <xsl:when test="valOblastPodania = 'DAN'">Správa daní</xsl:when>
      <xsl:when test="valOblastPodania = 'KON'">Kontrola</xsl:when>
      <xsl:when test="valOblastPodania = 'EXE'">Daňová exekúcia</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valOblastPodania"/>
      </xsl:otherwise>
      </xsl:choose>
    Agenda:
      <xsl:choose>
      <xsl:when test="valAgenda = 'DAN_FO'">Daň z príjmov fyzickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'DAN_PO'">Daň z príjmov právnickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'DAN_PH'">Daň z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'DAN_ZC'">Daň zo závislej činnosti</xsl:when>
      <xsl:when test="valAgenda = 'DAN_MV'">Daň z motorových vozidiel</xsl:when>
      <xsl:when test="valAgenda = 'DAN_POI'">Daň z poistenia</xsl:when>
      <xsl:when test="valAgenda = 'DAN_DZ'">Daň vyberaná zrážkou</xsl:when>
      <xsl:when test="valAgenda = 'DAN_PR'">Odvody</xsl:when>
      <xsl:when test="valAgenda = 'DAN_PHO'">Osobitná správa dane z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'KON_FO'">Daň z príjmov fyzickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'KON_PO'">Daň z príjmov právnickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'KON_PH'">Daň z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'KON_ZC'">Daň zo závislej činnosti</xsl:when>
      <xsl:when test="valAgenda = 'KON_MV'">Daň z motorových vozidiel</xsl:when>
      <xsl:when test="valAgenda = 'KON_POI'">Daň z poistenia</xsl:when>
      <xsl:when test="valAgenda = 'KON_DZ'">Daň vyberaná zrážkou</xsl:when>
      <xsl:when test="valAgenda = 'KON_PR'">Odvody</xsl:when>
      <xsl:when test="valAgenda = 'KON_PHO'">Osobitná správa dane z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'EXE_PR'">Dane a odvody</xsl:when>
      <xsl:when test="valAgenda = 'REG_DAN'">Registrácia na daň z príjmov, daň z pridanej hodnoty a daň z poistenia</xsl:when>
      <xsl:when test="valAgenda = 'REG_EKK'">Pokladnica e-kasa klient</xsl:when>
      <xsl:when test="valAgenda = 'REG_OZ'">Oznámenie zmien</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_FO'">Daň z príjmov fyzickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_PO'">Daň z príjmov právnickej osoby</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_PH'">Daň z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_ZC'">Daň zo závislej činnosti</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_MV'">Daň z motorových vozidiel</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_POI'">Daň z poistenia</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_PR'">Odvody</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_PHO'">Osobitná správa dane z pridanej hodnoty</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_OK'">Odvolacie konanie</xsl:when>
      <xsl:when test="valAgenda = 'FR_DAN_DZ'">Daň vyberaná zrážkou</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valAgenda"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="/dokument/secTypPodania">
    Typ služby:
      <xsl:choose>
      <xsl:when test="valTypSluzby1 = '1'">Podlieha správnemu poplatku</xsl:when>
      <xsl:when test="valTypSluzby1 = '2'">Nepodlieha správnemu poplatku</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valTypSluzby1"/>
      </xsl:otherwise>
      </xsl:choose>
    Typ podania:
      <xsl:choose>
      <xsl:when test="valTypPodania = 'ZIA'" >Žiadosť</xsl:when>
      <xsl:when test="valTypPodania = 'ZVP'" >Žiadosť o vydanie potvrdenia</xsl:when>
      <xsl:when test="valTypPodania = 'OZS'" >Oznámenie</xsl:when>
      <xsl:when test="valTypPodania = 'ODV'" >Odvolanie</xsl:when>
      <xsl:when test="valTypPodania = 'POT'" >Potvrdenie</xsl:when>
      <xsl:when test="valTypPodania = 'VVY'" >Vysvetlenie, vyjadrenie</xsl:when>
      <xsl:when test="valTypPodania = 'ODP'" >Odpoveď na výzvu</xsl:when>
      <xsl:when test="valTypPodania = 'NAM'" >Námietka</xsl:when>
      <xsl:when test="valTypPodania = 'POD'" >Podnet</xsl:when>
      <xsl:when test="valTypPodania = 'PNZ'" >Plnomocenstvo na zastupovanie</xsl:when>
      <xsl:when test="valTypPodania = 'SVZ'" >Späťvzatie žiadosti</xsl:when>
      <xsl:when test="valTypPodania = 'INE'" >Iné</xsl:when>
      <xsl:when test="valTypPodania = 'HLA'" >Hlásenie</xsl:when>
      <xsl:when test="valTypPodania = 'NZA'" >Námietka zaujatosti</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valTypPodania"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="/dokument/secDanSubjekt">
      <xsl:for-each select="/dokument/secDanSubjekt/secIdentifCisla">

      Identifikačné číslo
    IČ DPH (VAT Identification Number):
      <xsl:value-of select="VAT_IdentificationNumber"/>
    VOES Number:
      <xsl:value-of select="VOES_Number"/>
    IOSS VAT Identification Number:
      <xsl:value-of select="IOSS_VAT_IdentificationNumber"/>
    Intermediary Number:
      <xsl:value-of select="IntermediaryNumber"/>
      </xsl:for-each>
      <!-- FO -->
      <xsl:if test="secDanSubjFO">

      Fyzická osoba

      <xsl:for-each select="secDanSubjFO">
    Daňové identifikačné číslo:
      <xsl:value-of select="/dokument/secDanSubjekt/valDicDanSubj"/>
    IČO:
      <xsl:value-of select="valIcoFO"/>
    Obchodné meno / názov:
      <xsl:value-of select="valObchMenoDanSubjFO"/>
    Titul pred menom:
      <xsl:value-of select="secDoplUdajeFO/valTitulPredDanSubjFO"/>
    Meno:
      <xsl:value-of select="secDoplUdajeFO/valMenoDanSubjFO"/>
    Priezvisko:
      <xsl:value-of select="secDoplUdajeFO/valPriezvDanSubjFO"/>
    Titul za menom:
      <xsl:value-of select="secDoplUdajeFO/valTitulZaDanSubjFO"/>
    Rodné číslo:
      <xsl:value-of select="secDoplUdajeFO/valRodneCisloDanSubjFO"/>
    Dátum narodenia:
      <xsl:value-of select="concat(substring(secDoplUdajeFO/valDatumNarodeniaDanSubjFO,9,2),'.',substring(secDoplUdajeFO/valDatumNarodeniaDanSubjFO,6,2),'.',substring(secDoplUdajeFO/valDatumNarodeniaDanSubjFO,1,4))"/>
      </xsl:for-each>
      </xsl:if>
      <!-- PO -->
      <xsl:if test="secDanSubjPO">

      Právnická osoba

      <xsl:for-each select="secDanSubjPO">
    Daňové identifikačné číslo:
      <xsl:value-of select="/dokument/secDanSubjekt/valDicDanSubj"/>
    IČO:
      <xsl:value-of select="valIcoPO"/>
    Obchodné meno / názov:
      <xsl:value-of select="valObchMenoDanSubjPO"/>
    Právna forma:
      <xsl:choose>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = ''"></xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '121'">Akciová spoločnosť</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '312'">Banka-štátny peňažný ústav</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '721'">Cirkevná organizácia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '434'">Doplnková dôchodková poisťovňa</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '205'">Družstvo</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '123'">Európska spoločnosť</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '124'">Európske družstvo</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '122'">Európske zoskupenie hospodárskych záujmov</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '804'">Európske zoskupenie územnej spolupráce</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '381'">Fondy</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '383'">Iná organizácia verejnej správy</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '125'">Jednoduchá spoločnosť na akcie</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '113'">Komanditná spoločnosť</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '445'">Komoditná burza</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '745'">Komora (s výnimkou profesných komôr)</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '921'">Medzinárodné organizácie a združenia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '951'">Miestna jednotka bez právnej spôsobilosti</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '117'">Nadácia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '311'">Národná banka Slovenska</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '118'">Neinvestičný fond</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '995'">Nešpecifikovaná právna forma</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '119'">Nezisková organizácia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '120'">Nezisková organizácia poskytujúca všeobecne prospešné služby</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '801'">Obec (obecný úrad), mesto (mestský úrad)</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '711'">Politická strana, politické hnutie</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '331'">Príspevková organizácia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '321'">Rozpočtová organizácia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '803'">Samosprávny kraj (úrad samosprávneho kraja)</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '433'">Sociálna a zdravotné poisťovne</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '271'">Spoločenstvá vlastníkov pozemkov, bytov a pod.</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '112'">Spoločnosť s ručením obmedzeným</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '741'">Stavovská organizácia - profesná komora</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '301'">Štátny podnik</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '111'">Verejná obchodná spoločnosť</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '333'">Verejná výskumná inštitúcia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '382'">Verejnoprávna inštitúcia</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '422'">Zahraničná osoba, fyzická osoba s bydliskom mimo územia SR</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '421'">Zahraničná osoba, právnická osoba so sídlom mimo územia SR</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '911'">Zahraničné kultúrne, informačné stredisko, rozhlasová, tlačová a televízna agentúra</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '931'">Zastúpenie zahraničnej právnickej osoby</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '901'">Zastupiteľské orgány iných štátov</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '752'">Záujmové združenie fyzických osôb bez právnej spôsobilosti</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '751'">Záujmové združenie právnických osôb</xsl:when>
      <xsl:when test="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO = '701'">Združenie (zväz, spolok, spoločnosť, klub ai.)</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="/dokument/secDanSubjekt/secDanSubjPO/secDoplUdajePO/valPravnaFormaDanSubjPO"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>
      </xsl:if>
      </xsl:for-each>

      Adresa trvalého pobytu fyzickej osoby/adresa sídla právnickej osoby

    Ulica:
      <xsl:value-of select="/dokument/secSidlo/valUlica"/>
    Číslo:
      <xsl:value-of select="/dokument/secSidlo/valCislo"/>
    PSČ:
      <xsl:value-of select="/dokument/secSidlo/valPsc"/>
    Obec:
      <xsl:value-of select="/dokument/secSidlo/valObec"/>
    Štát:
      <xsl:choose>
      <xsl:when test="/dokument/secSidlo/valStat = ''"></xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Afganistan'">Afganistan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Alandy'">Alandy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Albánsko'">Albánsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Alžírsko'">Alžírsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Americká Samoa'">Americká Samoa</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Americké Panenské ostrovy'">Americké Panenské ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Andorra'">Andorra</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Angola'">Angola</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Anguilla'">Anguilla</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Antarktída'">Antarktída</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Antigua a Barbuda'">Antigua a Barbuda</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Argentína'">Argentína</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Arménsko'">Arménsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Aruba'">Aruba</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Austrália'">Austrália</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Azerbajdžan'">Azerbajdžan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bahamy'">Bahamy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bahrajn'">Bahrajn</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bangladéš'">Bangladéš</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Barbados'">Barbados</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Belgicko'">Belgicko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Belize'">Belize</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Benin'">Benin</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bermudy'">Bermudy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bhután'">Bhután</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bielorusko'">Bielorusko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bolívia'">Bolívia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bonaire, Svätý Eustach a Saba'">Bonaire, Svätý Eustach a Saba</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bosna a Hercegovina'">Bosna a Hercegovina</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Botswana'">Botswana</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bouvetov ostrov'">Bouvetov ostrov</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Brazília'">Brazília</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Britské indickooceánske územie'">Britské indickooceánske územie</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Britské Panenské ostrovy'">Britské Panenské ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Brunej'">Brunej</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Bulharsko'">Bulharsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Burkina'">Burkina</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Burundi'">Burundi</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Cookove ostrovy'">Cookove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Curaçao'">Curaçao</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Cyprus'">Cyprus</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Čad'">Čad</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Česko'">Česko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Čierna Hora'">Čierna Hora</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Čile'">Čile</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Čína'">Čína</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Dánsko'">Dánsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Dominika'">Dominika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Dominikánska republika'">Dominikánska republika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Džibutsko'">Džibutsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Egypt'">Egypt</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Ekvádor'">Ekvádor</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Eritrea'">Eritrea</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Estónsko'">Estónsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Etiópia'">Etiópia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Faerské ostrovy'">Faerské ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Falklandy'">Falklandy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Fidži'">Fidži</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Filipíny'">Filipíny</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Fínsko'">Fínsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Francúzska Guyana'">Francúzska Guyana</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Francúzska Polynézia'">Francúzska Polynézia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Francúzske južné územia'">Francúzske južné územia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Francúzsko'">Francúzsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Gabon'">Gabon</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Gambia'">Gambia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Ghana'">Ghana</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Gibraltár'">Gibraltár</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Grécko'">Grécko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Grenada'">Grenada</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Grónsko'">Grónsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Gruzínsko'">Gruzínsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guadeloupe'">Guadeloupe</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guam'">Guam</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guatemala'">Guatemala</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guernsey'">Guernsey</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guinea'">Guinea</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guinea-Bissau'">Guinea-Bissau</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Guyana'">Guyana</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Haiti'">Haiti</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Heardov ostrov a Macdonaldove ostrovy'">Heardov ostrov a Macdonaldove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Holandsko'">Holandsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Honduras'">Honduras</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Hongkong'">Hongkong</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Chorvátsko'">Chorvátsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'India'">India</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Indonézia'">Indonézia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Irak'">Irak</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Irán'">Irán</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Írsko'">Írsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Island'">Island</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Izrael'">Izrael</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Jamajka'">Jamajka</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Japonsko'">Japonsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Jemen'">Jemen</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Jersey'">Jersey</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Jordánsko'">Jordánsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Južná Afrika'">Južná Afrika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Južná Georgia a Južné Sandwichove ostrovy'">Južná Georgia a Južné Sandwichove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Južný Sudán'">Južný Sudán</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kajmanie ostrovy'">Kajmanie ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kambodža'">Kambodža</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kamerun'">Kamerun</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kanada'">Kanada</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kapverdy'">Kapverdy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Katar'">Katar</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kazachstan'">Kazachstan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Keňa'">Keňa</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kirgizsko'">Kirgizsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kiribati'">Kiribati</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kokosové ostrovy'">Kokosové ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kolumbia'">Kolumbia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Komory'">Komory</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kongo'">Kongo</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kongo (býv. Zair)'">Kongo (býv. Zair)</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kórejská ľudovodemokratická republika'">Kórejská ľudovodemokratická republika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kórejská republika'">Kórejská republika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kostarika'">Kostarika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kuba'">Kuba</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Kuvajt'">Kuvajt</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Laos'">Laos</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Lesotho'">Lesotho</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Libanon'">Libanon</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Libéria'">Libéria</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Líbya'">Líbya</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Lichtenštajnsko'">Lichtenštajnsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Litva'">Litva</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Lotyšsko'">Lotyšsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Luxembursko'">Luxembursko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Macao'">Macao</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Macedónsko'">Macedónsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Madagaskar'">Madagaskar</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Maďarsko'">Maďarsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Malajzia'">Malajzia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Malawi'">Malawi</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Maldivy'">Maldivy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mali'">Mali</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Malta'">Malta</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Man'">Man</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Maroko'">Maroko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Marshallove ostrovy'">Marshallove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Martinik'">Martinik</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Maurícius'">Maurícius</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mauritánia'">Mauritánia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mayotte'">Mayotte</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Menšie odľahlé ostrovy USA'">Menšie odľahlé ostrovy USA</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mexiko'">Mexiko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mikronézia'">Mikronézia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mjanmarsko'">Mjanmarsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Moldavsko'">Moldavsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Monako'">Monako</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mongolsko'">Mongolsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Montserrat'">Montserrat</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Mozambik'">Mozambik</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Namíbia'">Namíbia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nauru'">Nauru</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nemecko'">Nemecko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nepál'">Nepál</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Niger'">Niger</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nigéria'">Nigéria</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nikaragua'">Nikaragua</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Niue'">Niue</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Norfolk'">Norfolk</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nórsko'">Nórsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nová Kaledónia'">Nová Kaledónia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Nový Zéland'">Nový Zéland</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Omán'">Omán</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Pakistan'">Pakistan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Palau'">Palau</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Palestína'">Palestína</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Panama'">Panama</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Papua-Nová Guinea'">Papua-Nová Guinea</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Paraguaj'">Paraguaj</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Peru'">Peru</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Pitcairnove ostrovy'">Pitcairnove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Pobrežie Slonoviny'">Pobrežie Slonoviny</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Poľsko'">Poľsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Portoriko'">Portoriko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Portugalsko'">Portugalsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Rakúsko'">Rakúsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Réunion'">Réunion</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Rovníková Guinea'">Rovníková Guinea</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Rumunsko'">Rumunsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Rusko'">Rusko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Rwanda'">Rwanda</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Saint Pierre a Miquelon'">Saint Pierre a Miquelon</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Salvádor'">Salvádor</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Samoa'">Samoa</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'San Maríno'">San Maríno</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Saudská Arábia'">Saudská Arábia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Senegal'">Senegal</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Severné Mariány'">Severné Mariány</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Seychely'">Seychely</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Sierra Leone'">Sierra Leone</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Singapur'">Singapur</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Slovensko'">Slovensko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Slovinsko'">Slovinsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Somálsko'">Somálsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Spojené arabské emiráty'">Spojené arabské emiráty</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Spojené kráľovstvo'">Spojené kráľovstvo</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Spojené štáty, USA'">Spojené štáty, USA</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Srbsko'">Srbsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Srí Lanka'">Srí Lanka</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Stredoafrická republika'">Stredoafrická republika</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Sudán'">Sudán</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Surinam'">Surinam</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svalbard a Jan Mayen'">Svalbard a Jan Mayen</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svazijsko'">Svazijsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätá Helena, Ascension'">Svätá Helena, Ascension</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätá Lucia'">Svätá Lucia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Bartolomej'">Svätý Bartolomej</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Krištof a Nevis'">Svätý Krištof a Nevis</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Martin (francúzska časť)'">Svätý Martin (francúzska časť)</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Martin (holandská časť)'">Svätý Martin (holandská časť)</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Tomáš a Princov ostrov'">Svätý Tomáš a Princov ostrov</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Svätý Vincent a Grenadíny'">Svätý Vincent a Grenadíny</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Sýria'">Sýria</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Šalamúnove ostrovy'">Šalamúnove ostrovy</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Španielsko'">Španielsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Švajčiarsko'">Švajčiarsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Švédsko'">Švédsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tadžikistan'">Tadžikistan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Taiwan'">Taiwan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Taliansko'">Taliansko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tanzánia'">Tanzánia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Thajsko'">Thajsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Togo'">Togo</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tokelau'">Tokelau</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tonga'">Tonga</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Trinidad a Tobago'">Trinidad a Tobago</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tunisko'">Tunisko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Turecko'">Turecko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Turkménsko'">Turkménsko</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Turks a Caicos'">Turks a Caicos</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Tuvalu'">Tuvalu</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Uganda'">Uganda</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Ukrajina'">Ukrajina</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Uruguaj'">Uruguaj</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Uzbekistan'">Uzbekistan</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Vanuatu'">Vanuatu</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Vatikán'">Vatikán</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Venezuela'">Venezuela</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Vianočný ostrov'">Vianočný ostrov</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Vietnam'">Vietnam</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Východný Timor'">Východný Timor</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Wallis a Futuna'">Wallis a Futuna</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Zambia'">Zambia</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Západná Sahara'">Západná Sahara</xsl:when>
      <xsl:when test="/dokument/secSidlo/valStat = 'Zimbabwe'">Zimbabwe</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="/dokument/secSidlo/valStat"/>
      </xsl:otherwise>
      </xsl:choose>
    Číslo telefónu:
      <xsl:value-of select="/dokument/secSidlo/valTelefon"/>
    E-mailová adresa:
      <xsl:value-of select="/dokument/secSidlo/valEmail"/>

      Údaje k spoplatnenému podaniu

      <xsl:if test="/dokument/secUdajeSpoplatnenePodanie">
      <xsl:for-each select="/dokument/secUdajeSpoplatnenePodanie">
    ID služby:
      <xsl:value-of select="ID_sluzby"/>
    Sadzobník poplatkov:
      <xsl:choose>
      <xsl:when test="valSadzobnikPoplatkov = ''"></xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.1.1'">19.1.1. Vydanie rozhodnutia - položka 143a (o deleg.miest. prísluš.,o predĺžení,odpust.lehoty,o povolení odkladu platenia dane,úľavy dane)</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_V19.1.2'">19.1.2. Vydanie potvrdenia - položka 143b (o stave osob.účtu, o stave nedoplatkov, o úhrade daň.záväzkov, neexistencii pohľadávok)</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_V19.1.3'">19.1.3. Doplnenie údajov na predtlačenom tlačive - položka 143c</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.1.4'">19.1.4. Zápis DKP do náhr.knihy, osvedč. o registr. ako náhrady, súhlas s naklad. zálož.práva, preruš.daň.konania - položka 144a, d, e, f</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.1.5'">19.1.5. Súhlas správcu dane s výmazom z Obch. reg., povolenie úľavy zo sankcie alebo jej odpustenie - položka  144 b, c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_V19.1.6'">19.1.6. Vyhotovenie a osvedčenie rovnopisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_P19.2.1'">19.2.1. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 563/2009 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_P19.2.2'">19.2.2. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 71/1967 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.2.3'">19.2.3. Vydanie preukazu (osvedčenia), predĺženie platnosti preukazu podľa osobitných predpisov - položka 6 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_V19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_V19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'DAN_Z19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.1.1'">19.1.1. Vydanie rozhodnutia - položka 143a (o deleg.miest. prísluš.,o predĺžení,odpust.lehoty,o povolení odkladu platenia dane,úľavy dane)</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_V19.1.3'">19.1.3. Doplnenie údajov na predtlačenom tlačive - položka 143c</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.1.4'">19.1.4. Zápis DKP do náhr.knihy, osvedč. o registr. ako náhrady, súhlas s naklad. zálož.práva, preruš.daň.konania - položka 144a, d, e, f</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.1.5'">19.1.5. Súhlas správcu dane s výmazom z Obch. reg., povolenie úľavy zo sankcie alebo jej odpustenie - položka  144 b, c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_V19.1.6'">19.1.6. Vyhotovenie a osvedčenie odpisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.1.6'">19.1.6. Vyhotovenie a osvedčenie odpisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_P19.2.1'">19.2.1. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 563/2009 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_V19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'REG_Z19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_Z19.1.1'">19.1.1. Vydanie rozhodnutia - položka 143a (o deleg.miest. prísluš.,o predĺžení,odpust.lehoty,o povolení odkladu platenia dane,úľavy dane)</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_Z19.1.4'">19.1.4. Zápis DKP do náhr.knihy, osvedč. o registr. ako náhrady, súhlas s naklad. zálož.práva, preruš.daň.konania - položka 144a, d, e, f</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_V19.1.6'">19.1.6. Vyhotovenie a osvedčenie odpisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_P19.2.1'">19.2.1. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 563/2009 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_P19.2.2'">19.2.2. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 71/1967 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_Z19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_V19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'KON_Z19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_Z19.1.4'">19.1.4. Zápis DKP do náhr.knihy, osvedč. o registr. ako náhrady, súhlas s naklad. zálož.práva, preruš.daň.konania - položka 144a, d, e, f</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_V19.1.6'">19.1.6. Vyhotovenie a osvedčenie odpisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_P19.2.1'">19.2.1. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 563/2009 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_Z19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_V19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'EXE_Z19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_Z19.1.1'">19.1.1. Vydanie rozhodnutia - položka 143a (o deleg.miest. prísluš.,o predĺžení,odpust.lehoty,o povolení odkladu platenia dane,úľavy dane)</xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_V19.1.6'">19.1.6. Vyhotovenie a osvedčenie odpisov, oznámenia o registrácii z.č. 563/2009 Z.z. - položka 2a, 2c </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_P19.2.1'">19.2.1. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 563/2009 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_P19.2.2'">19.2.2. Návrh na obnovu konania, podnet na preskúmanie rohodnutia  z.č. 71/1967 Z.z. - položka 1 bod. 1 a 2 </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_Z19.2.4'">19.2.4. Osvedčenie podpisu, odtlačku úrad. pečiatky,vyhotovenie a osvedč. odpisu,výpisu podľa osobit. predpisov - položka 3,1.bod,, pism. a), b) položka 2 o) </xsl:when>
      <xsl:when test="valSadzobnikPoplatkov = 'FRI_V19.3.1'">19.3.1. Agenda Colných a Daňových úradov  - úkon vykonaný v elektronickej podobe</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valSadzobnikPoplatkov"/>
      </xsl:otherwise>
      </xsl:choose>
    Názov služby:
      <xsl:choose>
      <xsl:when test = "valNazovSluzby = ''"></xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1054/P1054'">19.1.1.2. Vydanie rozhodnutia o predĺžení lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1055/P1055'">19.1.1.3. Vydanie rozhodnutia o odpustení zmeškanej lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1060/P1060'">19.1.1.4. Vydanie rozhodnutia o povolení odkladu platenia dane alebo platenia dane v splátkach na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1063/P1063'">19.1.1.5. Vydanie rozhodnutia o povolení úľavy na dani alebo odpustení daňového nedoplatku v daňovom konaní  - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1058/P1058'">19.1.2.1. Vydanie potvrdenia o stave osobného účtu na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1070/P1070'">19.1.2.2. Vydanie potvrdenia orgánom finančnej správy podľa osobitného predpisu - z. č. 563/2009 Z. z., z. č. 71/1967 Zb.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1086/P1086'">19.1.2.4. Vydanie potvrdenia o úhrade daň. záväzkov pre účely žiadosti o obnov. povolenia na prechodný pobyt podľa zákona č. 404/2011 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1088/P1088'">19.1.3.1. Doplnenie údajov na predtlačenom tlačive, ktoré predloží žiadateľ - podľa osobitného predpisu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1061/P1061'">19.1.4.4. Žiadosť o prerušenie daňového konania - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1069/P1069'">19.1.5.2. Povolenie úľavy zo sankcie alebo odpustenie sankcie podľa osobitného predpisu - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE0000/P1052'">19.1.6.1. Vyhotovenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE0000/P1053'">19.1.6.2. Osvedčenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1064/P1064'">19.2.1.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1065/P1065'">19.2.1.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1066/P1066'">19.2.1.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1067/P1067'">19.2.1.4. Podnet na preskúm. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1073/P1073'">19.2.2.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1074/P1074'">19.2.2.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1075/P1075'">19.2.2.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_PE1076/P1076'">19.2.2.4. Podnet na presk. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1092/P1092'">19.2.3.1. Vydanie preukazu (osvedčenia), ak nejde o úkon spoplatňovaný podľa inej položky sadzobníka - podľa osobitného predpisu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1093/P1093'">19.2.3.2. Vydanie preukazu (osvedč.) ako náhrady za zničený, stratený, odcudzený, pošk. preukaz, ak nejde o úkon spopl. podľa inej pol.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1094/P1094'">19.2.3.3. Predĺženie platnosti preukazu (osvedčenia), ak nejde o úkon spoplat. podľa inej položky sadzobníka</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE1095/P1095'">19.2.3.4. Vydanie preukazu (osved.) ako náhrady za stratený, zničený, odcudzený, poškodený preukaz, opakovane v priebehu dvoch po sebe nasledujúcich rokoch</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1090/P1090'">19.2.4.1. Osvedčenie podpisu na listine alebo na jej rovnopise, za každý podpis - podľa osobitného predpisu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE1091/P1091'">19.2.4.2. Osvedčenie odtlačku úradnej pečiatky a úradného podpisu, za každý odtlačok a za každý podpis - podľa osobitného predpisu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE0000/P2545'">19.2.4.3. Vyhotovenie fotokópie listiny,  ktorá je súčasť. podania na zač. kon. na správ. orgáne podľa osobit. predpisov za každé aj začaté dve strany</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE2533/P0000'">19.3.1.1. Vyhotovenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_VE2534/P0000'">19.3.1.2. Osvedčenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'DAN_ZE2535/P0000'">19.3.1.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_ZE1054/P1054'">19.1.1.2. Vydanie rozhodnutia o predĺžení lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_ZE1055/P1055'">19.1.1.3. Vydanie rozhodnutia o odpustení zmeškanej lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_ZE1061/P1061'">19.1.4.4. Žiadosť o prerušenie daňového konania - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_VE0000/P1052'">19.1.6.1. Vyhotovenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_VE0000/P1053'">19.1.6.2. Osvedčenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1064/P1064'">19.2.1.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1065/P1065'">19.2.1.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1066/P1066'">19.2.1.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1067/P1067'">19.2.1.4. Podnet na preskúm. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1073/P1073'">19.2.2.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1074/P1074'">19.2.2.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1075/P1075'">19.2.2.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_PE1076/P1076'">19.2.2.4. Podnet na presk. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_ZE0000/P2545'">19.2.4.3. Vyhotovenie fotokópie listiny,  ktorá je súčasť. podania na zač. kon. na správ. orgáne podľa osobit. predpisov za každé aj začaté dve strany</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_VE2533/P0000'">19.3.1.1. Vyhotovenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_VE2534/P0000'">19.3.1.2. Osvedčenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'KON_ZE2535/P0000'">19.3.1.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_ZE1068/P1068'">19.1.4.3. Udelenie súhlasu s nakladaním s predmetom záložného práva - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_VE0000/P1052'">19.1.6.1. Vyhotovenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_VE0000/P1053'">19.1.6.2. Osvedčenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_PE1064/P1064'">19.2.1.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_PE1065/P1065'">19.2.1.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_PE1066/P1066'">19.2.1.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_PE1067/P1067'">19.2.1.4. Podnet na preskúm. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_ZE0000/P2545'">19.2.4.3. Vyhotovenie fotokópie listiny,  ktorá je súčasť. podania na zač. kon. na správ. orgáne podľa osobit. predpisov za každé aj začaté dve strany</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_VE2533/P0000'">19.3.1.1. Vyhotovenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_VE2534/P0000'">19.3.1.2. Osvedčenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'EXE_ZE2535/P0000'">19.3.1.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE1054/P1054'">19.1.1.2. Vydanie rozhodnutia o predĺžení lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE1055/P1055'">19.1.1.3. Vydanie rozhodnutia o odpustení zmeškanej lehoty - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_VE1088/P1088'">19.1.3.1. Doplnenie údajov na predtlačenom tlačive, ktoré predloží žiadateľ - podľa osobitného predpisu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE1062/P1062'">19.1.4.2. Vydanie osvedčenia o registrácii ako náhrady za stratené, zničené, poškodené alebo odcudzené osvedčenie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE1061/P1061'">19.1.4.4. Žiadosť o prerušenie daňového konania - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE1069/P1069'">19.1.5.2. Povolenie úľavy zo sankcie alebo odpustenie sankcie podľa osobitného predpisu - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_VE0000/P1052'">19.1.6.1. Vyhotovenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_VE0000/P1053'">19.1.6.2. Osvedčenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE0000/P1056'">19.1.6.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_PE1064/P1064'">19.2.1.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_PE1065/P1065'">19.2.1.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_PE1066/P1066'">19.2.1.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_PE1067/P1067'">19.2.1.4. Podnet na preskúm. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE0000/P2545'">19.2.4.3. Vyhotovenie fotokópie listiny,  ktorá je súčasť. podania na zač. kon. na správ. orgáne podľa osobit. predpisov za každé aj začaté dve strany</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_VE2533/P0000'">19.3.1.1. Vyhotovenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_VE2534/P0000'">19.3.1.2. Osvedčenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'REG_ZE2535/P0000'">19.3.1.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_ZE1051/P1051'">19.1.1.1. Vydanie rozhodnutia o delegovaní miestnej príslušnosti na iného správcu dane na návrh daň. subjektu (DS) - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_VE0000/P1052'">19.1.6.1. Vyhotovenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_VE0000/P1053'">19.1.6.2. Osvedčenie odpisu  (fotokópie), listinnej podoby elektron. dokumentu, výpisu   zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1064/P1064'">19.2.1.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1065/P1065'">19.2.1.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1066/P1066'">19.2.1.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1067/P1067'">19.2.1.4. Podnet na preskúm. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 563/2009 Z.z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1073/P1073'">19.2.2.1. Návrh na obnovu konania - ak návrh podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1074/P1074'">19.2.2.2. Návrh na obnovu konania - ak návrh podáva PO alebo FO oprávnená na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1075/P1075'">19.2.2.3. Podnet na preskúmanie rozhodnutia mimo odvolacieho konania, ak tento podáva FO - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_PE1076/P1076'">19.2.2.4. Podnet na presk. rozhodnutia mimo odvolacieho konania, ak tento podáva PO alebo FO opráv. na podnikanie - z. č. 71/1967 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_ZE0000/P2545'">19.2.4.3. Vyhotovenie fotokópie listiny,  ktorá je súčasť. podania na zač. kon. na správ. orgáne podľa osobit. predpisov za každé aj začaté dve strany</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_VE2536/P1057'">19.1.6.4. Oznámenie, či iná osoba je registrovaná na daň z pridanej hodnoty v inom členskom štáte na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_VE2533/P0000'">19.3.1.1. Vyhotovenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_VE2534/P0000'">19.3.1.2. Osvedčenie odpisu (fotokópie), listinnej podoby elektron. dokumentu, výpisu zo spisového materiálu v SJ, za každú aj začatú stranu</xsl:when>
      <xsl:when test = "valNazovSluzby = 'FRI_ZE2535/P0000'">19.3.1.3. Oznámenie, či určitý DS je registrovaný, alebo aké číslo mu bolo pridelené pri registrácii, na žiadosť DS - z. č. 563/2009 Z. z.</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valNazovSluzby"/>
      </xsl:otherwise>
      </xsl:choose>
    Spôsob spracovania výstupu služby:
      <xsl:choose>
      <xsl:when test = "secPomocna/valVystupSluzby = ''"></xsl:when>
      <xsl:when test = "secPomocna/valVystupSluzby = 'E'">V elektronickej podobe</xsl:when>
      <xsl:when test = "secPomocna/valVystupSluzby = 'P'">V papierovej podobe</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="secPomocna/valVystupSluzby"/>
      </xsl:otherwise>
      </xsl:choose>
    Jednotková suma za službu:
      <xsl:value-of select="secPomocna/valJednokovaCena"/>
    Oslobodenie:
      <xsl:value-of select="secPomocna/secPomocna2/valOslobodenie"/>
    Dôvod oslobodenia:
      <xsl:value-of select="valDovodOslobodenia"/>
    Elektronická schránka prijímateľa:
      <xsl:value-of select="secSchrankaAP/schrankaAP"/>
    Elektronická schránka platiteľa:
      <xsl:value-of select="secSchrankaSubjektu/schrankaSubjektu"/>
      </xsl:for-each>
      </xsl:if>
      <xsl:for-each select="/dokument/secDruhPrilohy">

    Druh prílohy:
      <xsl:choose>
      <xsl:when test="valDruhPrilohy = '0'" >Súčasťou podania nie je príloha</xsl:when>
      <xsl:when test="valDruhPrilohy = '1'" >Podanie je tvorené súborom dokumentov</xsl:when>
      <xsl:when test="valDruhPrilohy = '2'" >Súčasťou podania je príloha</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valDruhPrilohy"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>

      Obsah podania
    Text podania:
      <xsl:value-of select="/dokument/secObsah/valTextPodania"/>
      <!-- dokumenty podania -->
      <xsl:if test="/dokument/secDokumentyPodania/secDokumentPodania">

      Dokumenty podania

      <xsl:for-each select="/dokument/secDokumentyPodania/secDokumentPodania">
    Popis dokumentu:
      <xsl:value-of select="valPopisDokumentu"/>
    Spôsob doručenia:
      <xsl:choose>
      <xsl:when test="valSposobDoruceniaDokumentu = 'SD_ESP'" >Elektronicky – súčasť podania</xsl:when>
      <xsl:when test="valSposobDoruceniaDokumentu = 'SD_POS'" >Poštou</xsl:when>
      <xsl:when test="valSposobDoruceniaDokumentu = 'SD_OSO'" >Osobne</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valSposobDoruceniaDokumentu"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>
      </xsl:if>
      <!-- prilohy podania -->
      <xsl:if test="/dokument/secPrilohyPodania/secPrilohaPodania">

      Prílohy podania

      <xsl:for-each select="/dokument/secPrilohyPodania/secPrilohaPodania">
    Popis prílohy:
      <xsl:value-of select="valPopisPrilohy"/>
    Spôsob doručenia:
      <xsl:choose>
      <xsl:when test="valSposobDoruceniaPrilohy = 'SD_ESP'" >Elektronicky – súčasť podania</xsl:when>
      <xsl:when test="valSposobDoruceniaPrilohy = 'SD_POS'" >Poštou</xsl:when>
      <xsl:when test="valSposobDoruceniaPrilohy = 'SD_OSO'" >Osobne</xsl:when>
      <xsl:otherwise>
      <xsl:value-of select="valSposobDoruceniaPrilohy"/>
      </xsl:otherwise>
      </xsl:choose>
      </xsl:for-each>
      </xsl:if>

    Dátum podania:
      <xsl:for-each select="/dokument/secDatumPodania">
      <xsl:value-of select="concat(substring(valDatumPodania,9,2),'.',substring(valDatumPodania,6,2),'.',substring(valDatumPodania,1,4))"/>
      </xsl:for-each>
      </xsl:template>
      </xsl:stylesheet>

PREHLADv24_xsd:
  document_type: CLS_F_XSD_EDOC
  language: sk
  form: PREHLADv24
  data: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- PREHLAD_2024 - o zrazenych a odvedenych preddavkoch, zamestnaneckej premii a danovom bonuse za kalendarny mesiac -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xsd:annotation>
    <xsd:documentation>PREHLAD_2024</xsd:documentation>
    </xsd:annotation>
    <!-- prazdny retazec -->
    <xsd:simpleType name="emptyStr">
    <xsd:restriction base="xsd:string">
    <xsd:enumeration value=""/>
    </xsd:restriction>
    </xsd:simpleType>
    <!-- nepovinna boolovska hodnota -->
    <xsd:simpleType name="optBool">
    <xsd:union memberTypes="xsd:boolean emptyStr"/>
    </xsd:simpleType>
    <!-- povinna boolovska hodnota 0 alebo 1 -->
    <xsd:simpleType name="only_0_1">
    <xsd:restriction base="xsd:decimal">
    <xsd:totalDigits value="1"/>
    <xsd:pattern value="[0-1]"/>
    </xsd:restriction>
    </xsd:simpleType>
    <!-- datum v hlavickovej casti -->
    <xsd:simpleType name="Date">
    <xsd:restriction base="xsd:string">
    <xsd:pattern
    value="(((([0])?[1-9])|([1-2][0-9])|([3][0]))[.]((([0])?[13-9])|([1][0-2]))[.]([0-9][0-9][0-9][0-9]))"/>
    <xsd:pattern value="([3][1][.]((([0])?[13578])|([1][02]))[.]([0-9][0-9][0-9][0-9]))"/>
    <xsd:pattern value="(((([0])?[1-9])|([1][0-9])|([2][0-8]))[.]([0])?[2][.]([0-9][0-9][0-9][0-9]))"/>
    <xsd:pattern value="([2][9][.]([0])?[2])[.][0-9][0-9][13579][26]"/>
    <xsd:pattern value="([2][9][.]([0])?[2])[.][0-9][0-9][02468][048]"/>
    </xsd:restriction>
    </xsd:simpleType>
    <!-- nepovinne datum -->
    <xsd:simpleType name="optDate">
    <xsd:union memberTypes="Date emptyStr"/>
    </xsd:simpleType>
    <!-- nepovinne mesiac rok -->
    <xsd:simpleType name="optMonthYear">
    <xsd:union memberTypes="MonthYear emptyStr"/>
    </xsd:simpleType>
    <!-- datum v hlavickovej casti -->
    <xsd:simpleType name="MonthYear">
    <xsd:restriction base="xsd:string">
    <xsd:pattern value="(((([0])?[1-9])|([1][0-2]))[.]([0-9][0-9][0-9][0-9]))"/>
    </xsd:restriction>
    </xsd:simpleType>

    <!-- nepovinne cele cislo -->
    <xsd:simpleType name="optInt">
    <xsd:union memberTypes="xsd:integer emptyStr"/>
    </xsd:simpleType>
    <!-- nepovinne desatinne cislo -->
    <xsd:simpleType name="optDec">
    <xsd:union memberTypes="decimalWithTwoDec emptyStr"/>
    </xsd:simpleType>
    <!-- cislo tvaru N (12.2) -->
    <xsd:simpleType name="decimalWithTwoDec">
    <xsd:restriction base="xsd:decimal">
    <xsd:totalDigits value="12"/>
    <xsd:fractionDigits value="2"/>
    </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="cast1">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="r00"/>
    <xsd:element ref="r01"/>
    <xsd:element ref="r01a"/>
    <xsd:element ref="r02"/>
    <xsd:element ref="r03"/>
    <xsd:element ref="r04"/>
    <xsd:element ref="r05"/>
    <xsd:element ref="r06"/>
    <xsd:element ref="r07"/>
    <xsd:element ref="r08"/>
    <xsd:element ref="r08b"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="cast2">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="rA"/>
    <xsd:element ref="rB"/>
    <xsd:element ref="rC"/>
    <xsd:element ref="rD"/>
    <xsd:element ref="rE"/>
    <xsd:element ref="rF"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="cast3">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="poukazatBonus"/>
    <xsd:element ref="poukazatPremiu"/>
    <xsd:element ref="poukazatBonusNaUroky"/>
    <xsd:element ref="sposobPlatby"/>
    <xsd:element ref="IBAN"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="cislo" type="xsd:string"/>
    <xsd:element name="cisloUctu" type="xsd:string"/>
    <xsd:element name="predcislieUctu" type="xsd:string"/>
    <xsd:element name="IBAN" type="xsd:string"/>
    <xsd:element name="datum" type="optDate"/>
    <xsd:element name="mesiacRok" type="optMonthYear"/>
    <xsd:element name="datumVyhotovenia" type="optDate"/>
    <xsd:element name="datumZisteniaOP" type="optDate"/>
    <xsd:element name="datumNarodenia" type="optDate"/>
    <xsd:element name="dic" type="xsd:string"/>
    <xsd:element name="dokument">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="hlavicka"/>
    <xsd:element ref="telo"/>
    <xsd:element ref="vyhotovil"/>
    </xsd:sequence>
    <xsd:attribute name="appendixRemoved" type="xsd:unsignedByte" use="optional"/>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="druhPrehladu">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="riadny"/>
    <xsd:element ref="opravny"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="fax">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="predcislie"/>
    <xsd:element ref="cislo"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="fo">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="priezvisko"/>
    <xsd:element ref="meno"/>
    <xsd:element ref="titul"/>
    <xsd:element ref="titulZa"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="hlavicka">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="dic"/>
    <xsd:element ref="druhPrehladu"/>
    <xsd:element ref="zdanovacieObdobie"/>
    <xsd:element ref="datumZisteniaOP"/>
    <xsd:element ref="fo"/>
    <xsd:element ref="po"/>
    <xsd:element ref="sidlo"/>
    <xsd:element ref="podava"/>
    <xsd:element ref="tel"/>
    <xsd:element ref="email"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="kodBanky" type="xsd:string"/>
    <xsd:element name="meno" type="xsd:string"/>
    <xsd:element name="mesiac" type="optInt"/>
    <xsd:element name="obchodneMeno" type="xsd:string"/>
    <xsd:element name="obec" type="xsd:string"/>
    <xsd:element name="opravny" type="only_0_1"/>
    <xsd:element name="po">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="obchodneMeno"/>
    <xsd:element ref="pravnaForma"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="poukazatBonus" type="poukazat"/>
    <xsd:element name="poukazatPremiu" type="poukazat"/>
    <xsd:element name="poukazatBonusNaUroky" type="poukazat"/>
    <xsd:complexType name="poukazat">
    <xsd:sequence>
    <xsd:element ref="ziadam"/>
    <xsd:element ref="suma"/>
    </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="ziadam" type="only_0_1"/>
    <xsd:element name="poukazka" type="only_0_1"/>
    <xsd:element name="pravnaForma" type="xsd:string"/>
    <xsd:element name="predcislie" type="xsd:string"/>
    <xsd:element name="priezvisko" type="xsd:string"/>
    <xsd:element name="psc" type="xsd:string"/>
    <xsd:element name="r00" type="optDec"/>
    <xsd:element name="r01">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="datum"/>
    <xsd:element ref="suma"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="r01a">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="mesiacRok"/>
    <xsd:element ref="suma"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="r02" type="optDec"/>
    <xsd:element name="r03" type="optDec"/>
    <xsd:element name="r04" type="optDec"/>
    <xsd:element name="r05" type="optDec"/>
    <xsd:element name="r06" type="optDec"/>
    <xsd:element name="r07" type="optDec"/>
    <xsd:element name="r08" type="optDec"/>
    <xsd:element name="r08b" type="only_0_1"/>
    <xsd:element name="rA" type="optDec"/>
    <xsd:element name="rB" type="optDec"/>
    <xsd:element name="rC" type="optDec"/>
    <xsd:element name="rD" type="optDec"/>
    <xsd:element name="rE" type="optDec"/>
    <xsd:element name="rF" type="optDec"/>
    <xsd:element name="riadny" type="only_0_1"/>
    <xsd:element name="rodneCislo" type="optInt"/>
    <xsd:element name="rok" type="optInt"/>
    <xsd:element name="sidlo">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="ulica"/>
    <xsd:element ref="cislo"/>
    <xsd:element ref="psc"/>
    <xsd:element ref="obec"/>
    <xsd:element ref="stat"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="podava">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="priezvisko"/>
    <xsd:element ref="meno"/>
    <xsd:element ref="titul"/>
    <xsd:element ref="titulZa"/>
    <xsd:element ref="rodneCislo"/>
    <xsd:element ref="datumNarodenia"/>
    <xsd:element ref="dic"/>
    <xsd:element ref="obchodneMeno"/>
    <xsd:element ref="pravnaForma"/>
    <xsd:element ref="ulica"/>
    <xsd:element ref="cislo"/>
    <xsd:element ref="psc"/>
    <xsd:element ref="obec"/>
    <xsd:element ref="stat"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="socialne" type="optDec"/>
    <xsd:element name="sposobPlatby">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="poukazka"/>
    <xsd:element ref="ucet"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="stat" type="xsd:string"/>
    <xsd:element name="stvrtrok" type="optInt"/>
    <xsd:element name="suma" type="optDec"/>
    <xsd:element name="tel" type="xsd:string"/>
    <xsd:element name="email" type="xsd:string"/>
    <!--	<xsd:element name="tel">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="predcislie"/>
    <xsd:element ref="cislo"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>  -->
    <xsd:element name="telo">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="cast1"/>
    <xsd:element ref="cast2"/>
    <xsd:element ref="cast3"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="titul" type="xsd:string"/>
    <xsd:element name="titulZa" type="xsd:string"/>
    <xsd:element name="trvalyPobyt">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="ulica"/>
    <xsd:element ref="cislo"/>
    <xsd:element ref="psc"/>
    <xsd:element ref="obec"/>
    <xsd:element ref="stat"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="ucet" type="only_0_1"/>
    <xsd:element name="ulica" type="xsd:string"/>
    <xsd:element name="vyhotovil">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="meno"/>
    <xsd:element ref="tel"/>
    <xsd:element ref="datumVyhotovenia"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    <xsd:element name="zdanovacieObdobie">
    <xsd:complexType>
    <xsd:sequence>
    <xsd:element ref="mesiac"/>
    <xsd:element ref="rok"/>
    </xsd:sequence>
    </xsd:complexType>
    </xsd:element>
    </xsd:schema>


PREHLADv24_txt_xslt:
  document_type: CLS_F_XSLT_TXT_SGN
  language: sk
  form: PREHLADv24
  data: |
    <?xml version="1.0" encoding="UTF-8"?>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <xsl:output method="text" indent="yes" omit-xml-declaration="yes"/>
      <xsl:strip-space elements="*"/>
      <xsl:template match="/dokument">
        <xsl:text>PREHLADv24 - Prehľad o zrazen&#253;ch a odveden&#253;ch preddavkoch na daň (platn&#253; od 1.1.2024)
        </xsl:text>
        <xsl:apply-templates select="./hlavicka"/>
        <xsl:apply-templates select="./telo"/>
        <xsl:apply-templates select="./vyhotovil"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:apply-templates select="./dic"/>
        <xsl:apply-templates select="./druhPrehladu"/>
        <xsl:apply-templates select="./zdanovacieObdobie"/>
        <xsl:apply-templates select="./datumZisteniaOP"/>
        <xsl:apply-templates select="./fo"/>
        <xsl:apply-templates select="./po"/>
        <xsl:apply-templates select="./sidlo"/>
        <xsl:apply-templates select="./podava"/>
        <xsl:apply-templates select="./tel"/>
        <xsl:apply-templates select="./email"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/druhPrehladu">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Druh prehľadu</xsl:text>
        <xsl:apply-templates select="./riadny"/>
        <xsl:apply-templates select="./opravny"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/zdanovacieObdobie">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Zdaňovacie obdobie</xsl:text>
        <xsl:apply-templates select="./mesiac"/>
        <xsl:apply-templates select="./rok"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/fo">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Fyzick&#225; osoba</xsl:text>
        <xsl:apply-templates select="./priezvisko"/>
        <xsl:apply-templates select="./meno"/>
        <xsl:apply-templates select="./titul"/>
        <xsl:apply-templates select="./titulZa"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/po">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Pr&#225;vnick&#225; osoba</xsl:text>
        <xsl:apply-templates select="./obchodneMeno"/>
        <xsl:apply-templates select="./pravnaForma"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>S&#237;dlo (pr&#225;vnick&#225; osoba), trval&#253; pobyt (fyzick&#225; osoba)</xsl:text>
        <xsl:apply-templates select="./ulica"/>
        <xsl:apply-templates select="./cislo"/>
        <xsl:apply-templates select="./psc"/>
        <xsl:apply-templates select="./obec"/>
        <xsl:apply-templates select="./stat"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#218;daje o osobe, ktor&#225; pod&#225;va prehľad za zamestn&#225;vateľa</xsl:text>
        <xsl:apply-templates select="./priezvisko"/>
        <xsl:apply-templates select="./meno"/>
        <xsl:apply-templates select="./titul"/>
        <xsl:apply-templates select="./titulZa"/>
        <xsl:apply-templates select="./rodneCislo"/>
        <xsl:apply-templates select="./datumNarodenia"/>
        <xsl:apply-templates select="./dic"/>
        <xsl:apply-templates select="./obchodneMeno"/>
        <xsl:apply-templates select="./pravnaForma"/>
        <xsl:apply-templates select="./ulica"/>
        <xsl:apply-templates select="./cislo"/>
        <xsl:apply-templates select="./psc"/>
        <xsl:apply-templates select="./obec"/>
        <xsl:apply-templates select="./stat"/>
      </xsl:template>
      <xsl:template match="/dokument/telo">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:apply-templates select="./cast1"/>
        <xsl:apply-templates select="./cast2"/>
        <xsl:apply-templates select="./cast3"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>I. časť - Preddavky na daň</xsl:text>
        <xsl:apply-templates select="./r00"/>
        <xsl:apply-templates select="./r01"/>
        <xsl:apply-templates select="./r01a"/>
        <xsl:apply-templates select="./r02"/>
        <xsl:apply-templates select="./r03"/>
        <xsl:apply-templates select="./r04"/>
        <xsl:apply-templates select="./r05"/>
        <xsl:apply-templates select="./r06"/>
        <xsl:apply-templates select="./r07"/>
        <xsl:apply-templates select="./r08"/>
        <xsl:apply-templates select="./r08b"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>1. Zrazen&#233; preddavky na daň zo z&#250;čtovan&#253;ch a vyplaten&#253;ch zdaniteľn&#253;ch miezd (vr&#225;tane
          pr&#237;jmov zo soci&#225;lneho fondu) v peňažnej aj v nepeňažnej forme za za mesiac
        </xsl:text>
        <xsl:apply-templates select="./datum"/>
        <xsl:apply-templates select="./suma"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01a">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>1a. Suma preddavkov na daň z príjmov podľa § 5 ods. 4 zákona</xsl:text>
        <xsl:apply-templates select="./mesiacRok"/>
        <xsl:apply-templates select="./suma"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>II. časť - Rekapitul&#225;cia - daňov&#253; bonus a zamestnaneck&#225; pr&#233;mia</xsl:text>
        <xsl:apply-templates select="./rA"/>
        <xsl:apply-templates select="./rB"/>
        <xsl:apply-templates select="./rC"/>
        <xsl:apply-templates select="./rD"/>
        <xsl:apply-templates select="./rE"/>
        <xsl:apply-templates select="./rF"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>III. časť - ŽIADOSŤ O POUK&#193;ZANIE SUMY ROZDIELU DAŇOV&#201;HO BONUSU ALEBO ZAMESTNANECKEJ PR&#201;MIE
          - vyplňuje sa v treťom mesiaci pr&#237;slušn&#233;ho kalend&#225;rneho štvrťroka za cel&#253; kalend&#225;rny
          štvrťrok
        </xsl:text>
        <xsl:apply-templates select="./poukazatBonus"/>
        <xsl:apply-templates select="./poukazatPremiu"/>
        <xsl:apply-templates select="./poukazatBonusNaUroky"/>
        <xsl:apply-templates select="./sposobPlatby"/>
        <xsl:apply-templates select="./IBAN"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonus">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu daňov&#233;ho bonusu (&#167; 35 ods. 7 z&#225;kona)</xsl:text>
        <xsl:apply-templates select="./ziadam"/>
        <xsl:apply-templates select="./suma"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatPremiu">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu zamestnaneckej pr&#233;mie (&#167; 38 ods. 6 z&#225;kona)
        </xsl:text>
        <xsl:apply-templates select="./ziadam"/>
        <xsl:apply-templates select="./suma"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonusNaUroky">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu daňov&#233;ho bonusu na zaplaten&#233; &#250;roky podľa &#167; 33a
          z&#225;kona (&#167; 38 ods. 6 z&#225;kona)
        </xsl:text>
        <xsl:apply-templates select="./ziadam"/>
        <xsl:apply-templates select="./suma"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/sposobPlatby">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Sp&#244;sob platby</xsl:text>
        <xsl:apply-templates select="./poukazka"/>
        <xsl:apply-templates select="./ucet"/>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/IBAN">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>IBAN:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/bankovyUcet">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Bankov&#253; &#250;čet</xsl:text>
        <xsl:apply-templates select="./predcislieUctu"/>
        <xsl:apply-templates select="./cisloUctu"/>
        <xsl:apply-templates select="./kodBanky"/>
        <xsl:apply-templates select="./IBAN"/>
      </xsl:template>
      <xsl:template match="/dokument/vyhotovil">
        <xsl:text>&#xA;</xsl:text>
        <xsl:text>&#09;</xsl:text>
        <xsl:text>Vyhlasujem, že všetky &#250;daje uveden&#233; v prehľade s&#250; spr&#225;vne a &#250;pln&#233;.
        </xsl:text>
        <xsl:apply-templates select="./meno"/>
        <xsl:apply-templates select="./tel"/>
        <xsl:apply-templates select="./datumVyhotovenia"/>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/dic">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Daňov&#233; identifikačn&#233; č&#237;slo zamestn&#225;vateľa:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/druhPrehladu/riadny">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>riadny:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/druhPrehladu/opravny">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>opravn&#253;:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/zdanovacieObdobie/mesiac">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Mesiac (1 - 12):</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/zdanovacieObdobie/rok">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Rok:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/datumZisteniaOP">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D&#225;tum zistenia skutočnosti na podanie opravn&#233;ho prehľadu:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/fo/priezvisko">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Priezvisko:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/fo/meno">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Meno:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/fo/titul">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Titul pred menom:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/fo/titulZa">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Titul za menom:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/po/obchodneMeno">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>N&#225;zov:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/po/pravnaForma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Pr&#225;vna forma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo/ulica">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Ulica:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo/cislo">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>S&#250;pisn&#233; / orientačn&#233; č&#237;slo:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo/psc">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>PSČ:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo/obec">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Obec:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/sidlo/stat">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Št&#225;t:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/priezvisko">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Priezvisko:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/meno">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Meno:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/titul">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Titul pred menom:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/titulZa">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Titul za menom:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/rodneCislo">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Rodn&#233; č&#237;slo:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/datumNarodenia">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D&#225;tum narodenia:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/dic">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>DIČ:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/obchodneMeno">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>N&#225;zov:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/pravnaForma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Pr&#225;vna forma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/ulica">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Ulica:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/cislo">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>S&#250;pisn&#233; / orientačn&#233; č&#237;slo:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/psc">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>PSČ:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/obec">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Obec:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/podava/stat">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Št&#225;t:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/tel">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Telef&#243;nne č&#237;slo:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/hlavicka/email">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Emailov&#225; adresa:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r00">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>0. Z&#250;čtovan&#233; a vyplaten&#233; zdaniteľn&#233; pr&#237;jmy zo z&#225;vislej činnosti, vr&#225;tane
            zdaniteľn&#253;ch pr&#237;jmov zo soci&#225;lneho fondu v peňažnej aj v nepeňažnej forme za vykazovan&#253;
            kalend&#225;rny mesiac:
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01/datum">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D&#225;tum:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01/suma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Suma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01a/mesiacRok">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D&#225;tum:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r01a/suma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Suma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r02">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>2. Zrazen&#233; daňov&#233; nedoplatky (+) a vr&#225;ten&#233; daňov&#233; preplatky (-) z RZ za predch&#225;dzaj&#250;ce
            zdaňovacie obdobie:
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r03">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>3. Daňov&#233; nedoplatky (+) a daňov&#233; preplatky (-) za predch&#225;dzaj&#250;ce zdaňovacie
            obdobia:
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r04">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>4. &#218;hrn riadkov 1 až 3(r. 1 &#177; r.2 &#177; r. 3):</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r05">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>5. Priznan&#225; a vyplaten&#225; suma (-) a vybrat&#225; suma (+) daňov&#233;ho bonusu, o ktor&#250; sa
            znižuje (zvyšuje) &#250;hrnn&#225; suma preddavkov na daň a dane (vr&#225;tane vyplaten&#233;ho a vybrat&#233;ho
            daňov&#233;ho bonusu zRZ alebo vykonan&#253;ch opr&#225;v):
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r06">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>6. Priznan&#225; a vyplaten&#225; suma (-), a vybran&#225; suma (+) zamestnaneckej pr&#233;mie, o ktor&#250;
            sa znižuje (zvyšuje) &#250;hrnn&#225; suma preddavkov na daň a dane (vr&#225;tane vykonan&#253;ch opr&#225;v):
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r07">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>7. Priznan&#225; a vyplaten&#225; suma (-), a vybran&#225; suma (+) daňov&#233;ho bonusu na zaplaten&#233;
            &#250;roky podľa &#167; 33a z&#225;kona, o ktor&#250; sa znižuje (zvyšuje) &#250;hrnn&#225; suma preddavkov na
            daň a dane (vr&#225;tane vykonan&#253;ch opr&#225;v):
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r08">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>8. Odvodov&#225; povinnosť - preddavky na daň (r. 4 &#177; r.5 &#177; r.6 &#177; r.7):</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast1/r08b">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>uplatňujeme postup podľa § 40 ods. 8 zákona:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rA">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>A Celkov&#225; vyplaten&#225; suma daňov&#233;ho bonusu:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rB">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>B Suma daňov&#233;ho bonusu vyplaten&#225; z &#250;hrnu zrazen&#253;ch preddavkov na daň a dane:
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rC">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>C Suma daňov&#233;ho bonusu vyplaten&#225; z prostriedkov zamestn&#225;vateľa:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rD">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D Celkov&#225; vyplaten&#225; suma zamestnaneckej pr&#233;mie:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rE">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>E Suma zamestnaneckej pr&#233;mie vyplaten&#225; z &#250;hrnu zrazen&#253;ch preddavkov na daň a dane:
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast2/rF">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>F Suma zamestnaneckej pr&#233;mie vyplaten&#225; z prostriedkov zamestn&#225;vateľa:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonus/ziadam">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu daňov&#233;ho bonusu (&#167; 35 ods. 7 z&#225;kona):</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonus/suma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Suma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatPremiu/ziadam">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu zamestnaneckej pr&#233;mie (&#167; 38 ods. 6 z&#225;kona):
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatPremiu/suma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Suma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonusNaUroky/ziadam">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Žiadame o pouk&#225;zanie sumy rozdielu daňov&#233;ho bonusu na zaplaten&#233; &#250;roky podľa &#167;
            33a z&#225;kona (&#167; 38 ods. 6 z&#225;kona):
          </xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/poukazatBonusNaUroky/suma">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Suma:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/sposobPlatby/poukazka">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Poštovou pouk&#225;žkou:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/telo/cast3/sposobPlatby/ucet">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Na &#250;čet:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/vyhotovil/meno">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Vypracoval:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/vyhotovil/tel">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>Telef&#243;nne č&#237;slo:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template match="/dokument/vyhotovil/datumVyhotovenia">
        <xsl:if test="./text()">
          <xsl:text>&#xA;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>&#09;</xsl:text>
          <xsl:text>D&#225;tum:</xsl:text>
          <xsl:call-template name="string-replace-all">
            <xsl:with-param name="text" select="."/>
            <xsl:with-param name="replace" select="'&#10;'"/>
            <xsl:with-param name="by" select="'&#13;&#10;&#09;&#09;'"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      <xsl:template name="formatToSkDate">
        <xsl:param name="date"/>
        <xsl:variable name="dateString" select="string($date)"/>
        <xsl:choose>
          <xsl:when
                  test="$dateString != '' and string-length($dateString)=10 and string(number(substring($dateString, 1, 4))) != 'NaN' ">
            <xsl:value-of
                    select="concat(substring($dateString, 9, 2), '.', substring($dateString, 6, 2), '.', substring($dateString, 1, 4))"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$dateString"></xsl:value-of>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>
      <xsl:template name="booleanCheckboxToString">
        <xsl:param name="boolValue"/>
        <xsl:variable name="boolValueString" select="string($boolValue)"/>
        <xsl:choose>
          <xsl:when test="$boolValueString = 'true' ">
            <xsl:text>Áno</xsl:text>
          </xsl:when>
          <xsl:when test="$boolValueString = 'false' ">
            <xsl:text>Nie</xsl:text>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$boolValueString"></xsl:value-of>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>
      <xsl:template name="formatTimeTrimMinutes">
        <xsl:param name="time"/>
        <xsl:variable name="timeString" select="string($time)"/>
        <xsl:if test="$timeString != ''">
          <xsl:value-of select="substring($timeString, 1, 5)"/>
        </xsl:if>
      </xsl:template>
      <xsl:template name="string-replace-all">
        <xsl:param name="text"/>
        <xsl:param name="replace"/>
        <xsl:param name="by"/>
        <xsl:choose>
          <xsl:when test="contains($text, $replace)">
            <xsl:value-of select="substring-before($text,$replace)"/>
            <xsl:value-of select="$by"/>
            <xsl:call-template name="string-replace-all">
              <xsl:with-param name="text" select="substring-after($text,$replace)"/>
              <xsl:with-param name="replace" select="$replace"/>
              <xsl:with-param name="by" select="$by"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$text"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>
      <xsl:template name="formatToSkDateTime">
        <xsl:param name="dateTime"/>
        <xsl:variable name="dateSubstring" select="substring($dateTime, 1, 10)"/>
        <xsl:variable name="timeSubstring" select="substring($dateTime, 12, 8)"/>
        <xsl:variable name="dateString">
          <xsl:choose>
            <xsl:when
                    test="$dateSubstring != '' and string-length($dateSubstring)=10 and string(number(substring($dateSubstring, 1, 4))) != 'NaN' ">
              <xsl:value-of
                      select="concat(substring($dateSubstring, 9, 2), '.', substring($dateSubstring, 6, 2), '.', substring($dateSubstring, 1, 4))"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$dateSubstring"></xsl:value-of>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="timeString">
          <xsl:if test="$timeSubstring != ''">
            <xsl:value-of select="substring($timeSubstring, 1, 5)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:value-of select="concat($dateString,' ',$timeString)"/>
      </xsl:template>
    </xsl:stylesheet>

